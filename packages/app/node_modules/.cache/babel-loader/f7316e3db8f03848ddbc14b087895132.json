{"ast":null,"code":"var compose = require('ramda/src/compose');\n\nvar toString = require('ramda/src/toString');\n\nvar util = require('./internal/util');\n\nmodule.exports = IO;\n\nfunction IO(fn) {\n  if (!(this instanceof IO)) {\n    return new IO(fn);\n  }\n\n  this.fn = fn;\n}\n\nIO.prototype['@@type'] = 'ramda-fantasy/IO'; // `f` must return an IO\n\nIO.prototype.chain = function (f) {\n  var io = this;\n  return new IO(function () {\n    var next = f(io.fn.apply(io, arguments));\n    return next.fn.apply(next, arguments);\n  });\n}; //chainRec\n\n\nIO.chainRec = IO.prototype.chainRec = function (f, i) {\n  return new IO(function () {\n    var state = util.chainRecNext(i);\n\n    while (state.isNext) {\n      state = f(util.chainRecNext, util.chainRecDone, state.value).fn();\n    }\n\n    return state.value;\n  });\n};\n\nIO.prototype.map = function (f) {\n  var io = this;\n  return new IO(compose(f, io.fn));\n}; // `this` IO must wrap a function `f` that takes an IO (`thatIo`) as input\n// `f` must return an IO\n\n\nIO.prototype.ap = function (thatIo) {\n  return this.chain(function (f) {\n    return thatIo.map(f);\n  });\n};\n\nIO.runIO = function (io) {\n  return io.runIO.apply(io, [].slice.call(arguments, 1));\n};\n\nIO.prototype.runIO = function () {\n  return this.fn.apply(this, arguments);\n};\n\nIO.prototype.of = function (x) {\n  return new IO(function () {\n    return x;\n  });\n};\n\nIO.of = IO.prototype.of;\n\nIO.prototype.toString = function () {\n  return 'IO(' + toString(this.fn) + ')';\n};","map":{"version":3,"sources":["/home/noname001/react-typescript-data-gen/node_modules/ramda-fantasy/src/IO.js"],"names":["compose","require","toString","util","module","exports","IO","fn","prototype","chain","f","io","next","apply","arguments","chainRec","i","state","chainRecNext","isNext","chainRecDone","value","map","ap","thatIo","runIO","slice","call","of","x"],"mappings":"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","sourcesContent":["var compose = require('ramda/src/compose');\nvar toString = require('ramda/src/toString');\n\nvar util = require('./internal/util');\n\nmodule.exports = IO;\n\nfunction IO(fn) {\n  if (!(this instanceof IO)) {\n    return new IO(fn);\n  }\n  this.fn = fn;\n}\n\nIO.prototype['@@type'] = 'ramda-fantasy/IO';\n\n// `f` must return an IO\nIO.prototype.chain = function(f) {\n  var io = this;\n  return new IO(function() {\n    var next = f(io.fn.apply(io, arguments));\n    return next.fn.apply(next, arguments);\n  });\n};\n\n//chainRec\nIO.chainRec = IO.prototype.chainRec = function(f, i) {\n  return new IO(function() {\n    var state = util.chainRecNext(i);\n    while (state.isNext) {\n      state = f(util.chainRecNext, util.chainRecDone, state.value).fn();\n    }\n    return state.value;\n  });\n};\n\nIO.prototype.map = function(f) {\n  var io = this;\n  return new IO(compose(f, io.fn));\n};\n\n// `this` IO must wrap a function `f` that takes an IO (`thatIo`) as input\n// `f` must return an IO\nIO.prototype.ap = function(thatIo) {\n  return this.chain(function(f) {\n    return thatIo.map(f);\n  });\n};\n\nIO.runIO = function(io) {\n  return io.runIO.apply(io, [].slice.call(arguments, 1));\n};\n\nIO.prototype.runIO = function() {\n  return this.fn.apply(this, arguments);\n};\n\nIO.prototype.of = function(x) {\n  return new IO(function() { return x; });\n};\n\nIO.of = IO.prototype.of;\n\nIO.prototype.toString = function() {\n  return 'IO(' + toString(this.fn) + ')';\n};\n"]},"metadata":{},"sourceType":"script"}