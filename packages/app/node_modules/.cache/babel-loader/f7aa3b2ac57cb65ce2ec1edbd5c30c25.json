{"ast":null,"code":"import { converge, assocPath, path, prop, always, clone, map, ifElse, propEq, __, assoc, pipe, pair, cond, pathEq, isEmpty, not } from 'ramda';\nimport { selectByType } from './form';\nimport { findAndMerge } from './popular';\nconst actionOnOtherFields = converge(assocPath([0, 'fields']), [converge(findAndMerge, [path([0, 'fields']), prop(1), always('name')]), clone]);\nconst actionOnTypeField = converge(assocPath([0, 'fields']), [converge(map, [converge(ifElse(propEq('name', 'type'), __, converge(assoc('value'), [prop('defaultValue'), clone])), [pipe(path([1, 'value']), assoc('value'))]), pipe(path([1, 'value']), selectByType)]), clone]);\nexport const reducer = pipe(pair, cond([[pathEq([1, 'name'], 'type'), actionOnTypeField], [pipe(prop(1), isEmpty, not), actionOnOtherFields], [pipe(prop(1), isEmpty), clone]]), prop(0));","map":{"version":3,"sources":["/home/noname001/react-typescript-data-gen/packages/app/src/utils/hook.ts"],"names":["converge","assocPath","path","prop","always","clone","map","ifElse","propEq","__","assoc","pipe","pair","cond","pathEq","isEmpty","not","selectByType","findAndMerge","actionOnOtherFields","actionOnTypeField","reducer"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyDC,GAAzD,EAA8DC,MAA9D,EAAsEC,MAAtE,EAA8EC,EAA9E,EAAkFC,KAAlF,EAAyFC,IAAzF,EAA+FC,IAA/F,EAAqGC,IAArG,EAA2GC,MAA3G,EAAmHC,OAAnH,EAA4HC,GAA5H,QAAuI,OAAvI;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,MAAMC,mBAAmB,GAAGnB,QAAQ,CAClCC,SAAS,CAAC,CAAC,CAAD,EAAI,QAAJ,CAAD,CADyB,EAElC,CACED,QAAQ,CACNkB,YADM,EAEN,CACEhB,IAAI,CAAM,CAAC,CAAD,EAAI,QAAJ,CAAN,CADN,EAEEC,IAAI,CAAM,CAAN,CAFN,EAGEC,MAAM,CAAC,MAAD,CAHR,CAFM,CADV,EAQKC,KARL,CAFkC,CAApC;AAaA,MAAMe,iBAAiB,GAAGpB,QAAQ,CAChCC,SAAS,CAAC,CAAC,CAAD,EAAI,QAAJ,CAAD,CADuB,EAEhC,CACED,QAAQ,CACNM,GADM,EAEN,CACEN,QAAQ,CACNO,MAAM,CACJC,MAAM,CACJ,MADI,EAEJ,MAFI,CADF,EAKJC,EALI,EAMJT,QAAQ,CACNU,KAAK,CAAC,OAAD,CADC,EAEN,CAACP,IAAI,CAAC,cAAD,CAAL,EAAuBE,KAAvB,CAFM,CANJ,CADA,EAYN,CACEM,IAAI,CACFT,IAAI,CAAC,CAAC,CAAD,EAAI,OAAJ,CAAD,CADF,EAEFQ,KAAK,CAAC,OAAD,CAFH,CADN,CAZM,CADV,EAmBKC,IAAI,CACLT,IAAI,CAAC,CAAC,CAAD,EAAG,OAAH,CAAD,CADC,EAELe,YAFK,CAnBT,CAFM,CADV,EA2BKZ,KA3BL,CAFgC,CAAlC;AAgCA,OAAO,MAAMgB,OAAO,GAAGV,IAAI,CACzBC,IADyB,EAEzBC,IAAI,CAAC,CACH,CACEC,MAAM,CACJ,CAAC,CAAD,EAAI,MAAJ,CADI,EAEJ,MAFI,CADR,EAIKM,iBAJL,CADG,EAOH,CACET,IAAI,CACFR,IAAI,CAAC,CAAD,CADF,EAEFY,OAFE,EAGFC,GAHE,CADN,EAKKG,mBALL,CAPG,EAcH,CACER,IAAI,CACFR,IAAI,CAAC,CAAD,CADF,EAEFY,OAFE,CADN,EAIKV,KAJL,CAdG,CAAD,CAFqB,EAuBzBF,IAAI,CAAM,CAAN,CAvBqB,CAApB","sourcesContent":["import { converge, assocPath, path, prop, always, clone, map, ifElse, propEq, __, assoc, pipe, pair, cond, pathEq, isEmpty, not } from 'ramda'\nimport { selectByType } from './form'\nimport { findAndMerge } from './popular'\n\nconst actionOnOtherFields = converge(\n  assocPath([0, 'fields']),\n  [\n    converge(\n      findAndMerge,\n      [\n        path<any>([0, 'fields']),\n        prop<any>(1),\n        always('name')\n      ]\n    ), clone\n  ]\n)\nconst actionOnTypeField = converge(\n  assocPath([0, 'fields']),\n  [\n    converge(\n      map,\n      [\n        converge(\n          ifElse(\n            propEq(\n              'name',\n              'type'\n            ),\n            __,\n            converge(\n              assoc('value'),\n              [prop('defaultValue'), clone]\n            )\n          ),\n          [\n            pipe(\n              path([1, 'value']),\n              assoc('value'),\n            )\n          ]\n        ), pipe(\n          path([1,'value']),\n          selectByType\n        )\n      ]\n    ), clone\n  ]\n)\nexport const reducer = pipe(\n  pair,\n  cond([\n    [\n      pathEq(\n        [1, 'name'],\n        'type'\n      ), actionOnTypeField\n    ],\n    [\n      pipe(\n        prop(1),\n        isEmpty,\n        not\n      ), actionOnOtherFields\n    ],\n    [\n      pipe(\n        prop(1),\n        isEmpty\n      ), clone\n    ]\n  ]),\n  prop<any>(0)\n)"]},"metadata":{},"sourceType":"module"}