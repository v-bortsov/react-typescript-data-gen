{"ast":null,"code":"var curry = require('ramda/src/curry');\n\nvar toString = require('ramda/src/toString');\n\nvar util = require('./internal/util');\n\nfunction Either(left, right) {\n  switch (arguments.length) {\n    case 0:\n      throw new TypeError('no arguments to Either');\n\n    case 1:\n      return function (right) {\n        return right == null ? Either.Left(left) : Either.Right(right);\n      };\n\n    default:\n      return right == null ? Either.Left(left) : Either.Right(right);\n  }\n}\n\nEither.prototype['@@type'] = 'ramda-fantasy/Either';\nEither.prototype.map = util.returnThis;\n\nEither.of = Either.prototype.of = function (value) {\n  return Either.Right(value);\n};\n\nEither.prototype.chain = util.returnThis; // throw?\n\nEither.either = curry(function either(leftFn, rightFn, e) {\n  if (e instanceof _Left) {\n    return leftFn(e.value);\n  } else if (e instanceof _Right) {\n    return rightFn(e.value);\n  } else {\n    throw new TypeError('invalid type given to Either.either');\n  }\n});\n\nEither.isLeft = function (x) {\n  return x.isLeft;\n};\n\nEither.isRight = function (x) {\n  return x.isRight;\n}; // Right\n\n\nfunction _Right(x) {\n  this.value = x;\n}\n\nutil.extend(_Right, Either);\n_Right.prototype.isRight = true;\n_Right.prototype.isLeft = false;\n\n_Right.prototype.map = function (fn) {\n  return new _Right(fn(this.value));\n};\n\n_Right.prototype.ap = function (that) {\n  return that.map(this.value);\n};\n\n_Right.prototype.chain = function (f) {\n  return f(this.value);\n}; //chainRec\n\n\nEither.chainRec = Either.prototype.chainRec = function (f, i) {\n  var res,\n      state = util.chainRecNext(i);\n\n  while (state.isNext) {\n    res = f(util.chainRecNext, util.chainRecDone, state.value);\n\n    if (Either.isLeft(res)) {\n      return res;\n    }\n\n    state = res.value;\n  }\n\n  return Either.Right(state.value);\n};\n\n_Right.prototype.bimap = function (_, f) {\n  return new _Right(f(this.value));\n};\n\n_Right.prototype.extend = function (f) {\n  return new _Right(f(this));\n};\n\n_Right.prototype.toString = function () {\n  return 'Either.Right(' + toString(this.value) + ')';\n};\n\n_Right.prototype.equals = util.getEquals(_Right);\n\nEither.Right = function (value) {\n  return new _Right(value);\n}; // Left\n\n\nfunction _Left(x) {\n  this.value = x;\n}\n\nutil.extend(_Left, Either);\n_Left.prototype.isLeft = true;\n_Left.prototype.isRight = false;\n_Left.prototype.ap = util.returnThis;\n\n_Left.prototype.bimap = function (f) {\n  return new _Left(f(this.value));\n};\n\n_Left.prototype.extend = util.returnThis;\n\n_Left.prototype.toString = function () {\n  return 'Either.Left(' + toString(this.value) + ')';\n};\n\n_Left.prototype.equals = util.getEquals(_Left);\n\nEither.Left = function (value) {\n  return new _Left(value);\n}; // either\n\n\nEither.prototype.either = function instanceEither(leftFn, rightFn) {\n  return this.isLeft ? leftFn(this.value) : rightFn(this.value);\n};\n\nmodule.exports = Either;","map":{"version":3,"sources":["/home/noname001/react-typescript-data-gen/node_modules/ramda-fantasy/src/Either.js"],"names":["curry","require","toString","util","Either","left","right","arguments","length","TypeError","Left","Right","prototype","map","returnThis","of","value","chain","either","leftFn","rightFn","e","_Left","_Right","isLeft","x","isRight","extend","fn","ap","that","f","chainRec","i","res","state","chainRecNext","isNext","chainRecDone","bimap","_","equals","getEquals","instanceEither","module","exports"],"mappings":"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","sourcesContent":["var curry = require('ramda/src/curry');\nvar toString = require('ramda/src/toString');\n\nvar util = require('./internal/util');\n\n\nfunction Either(left, right) {\n  switch (arguments.length) {\n    case 0:\n      throw new TypeError('no arguments to Either');\n    case 1:\n      return function(right) {\n        return right == null ? Either.Left(left) : Either.Right(right);\n      };\n    default:\n      return right == null ? Either.Left(left) : Either.Right(right);\n  }\n}\n\nEither.prototype['@@type'] = 'ramda-fantasy/Either';\n\nEither.prototype.map = util.returnThis;\n\nEither.of = Either.prototype.of = function(value) {\n  return Either.Right(value);\n};\n\nEither.prototype.chain = util.returnThis; // throw?\n\nEither.either = curry(function either(leftFn, rightFn, e) {\n  if (e instanceof _Left) {\n    return leftFn(e.value);\n  } else if (e instanceof _Right) {\n    return rightFn(e.value);\n  } else {\n    throw new TypeError('invalid type given to Either.either');\n  }\n});\n\nEither.isLeft = function(x) {\n  return x.isLeft;\n};\n\nEither.isRight = function(x) {\n  return x.isRight;\n};\n\n\n// Right\nfunction _Right(x) {\n  this.value = x;\n}\nutil.extend(_Right, Either);\n\n_Right.prototype.isRight = true;\n_Right.prototype.isLeft = false;\n\n_Right.prototype.map = function(fn) {\n  return new _Right(fn(this.value));\n};\n\n_Right.prototype.ap = function(that) {\n  return that.map(this.value);\n};\n\n_Right.prototype.chain = function(f) {\n  return f(this.value);\n};\n\n//chainRec\nEither.chainRec = Either.prototype.chainRec = function(f, i) {\n  var res, state = util.chainRecNext(i);\n  while (state.isNext) {\n    res = f(util.chainRecNext, util.chainRecDone, state.value);\n    if (Either.isLeft(res)) {\n      return res;\n    }\n    state = res.value;\n  }\n  return Either.Right(state.value);\n};\n\n_Right.prototype.bimap = function(_, f) {\n  return new _Right(f(this.value));\n};\n\n_Right.prototype.extend = function(f) {\n  return new _Right(f(this));\n};\n\n_Right.prototype.toString = function() {\n  return 'Either.Right(' + toString(this.value) + ')';\n};\n\n_Right.prototype.equals = util.getEquals(_Right);\n\nEither.Right = function(value) {\n  return new _Right(value);\n};\n\n\n// Left\nfunction _Left(x) {\n  this.value = x;\n}\nutil.extend(_Left, Either);\n\n_Left.prototype.isLeft = true;\n_Left.prototype.isRight = false;\n\n_Left.prototype.ap = util.returnThis;\n\n_Left.prototype.bimap = function(f) {\n  return new _Left(f(this.value));\n};\n\n_Left.prototype.extend = util.returnThis;\n\n_Left.prototype.toString = function() {\n  return 'Either.Left(' + toString(this.value) + ')';\n};\n\n_Left.prototype.equals = util.getEquals(_Left);\n\nEither.Left = function(value) {\n  return new _Left(value);\n};\n\n\n// either\nEither.prototype.either = function instanceEither(leftFn, rightFn) {\n  return this.isLeft ? leftFn(this.value) : rightFn(this.value);\n};\n\nmodule.exports = Either;\n"]},"metadata":{},"sourceType":"script"}