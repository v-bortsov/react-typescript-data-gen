{"ast":null,"code":"var _jsxFileName = \"/home/noname001/react-typescript-data-gen/packages/app/src/features/generator/ColumnFilters.tsx\";\nimport { AimOutlined, DeleteOutlined, SaveOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport { map, omit, pipe, props, zipObj } from 'ramda';\nimport React from 'react';\nimport { renameKeys } from '../../utils/popular';\nimport { changeColumn, removeColumn, run } from './generatorSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst filterDropdown = (passObj, obj, ref, dispatch) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 8\n  },\n  children: [/*#__PURE__*/_jsxDEV(TextArea, {\n    onChange: e => dispatch(changeColumn({ ...passObj,\n      collect: e.target.value.split('\\n')\n    })),\n    placeholder: 'Pass Keywords ',\n    ref: ref,\n    rows: 4,\n    style: {\n      width: 188,\n      marginBottom: 8,\n      display: 'block'\n    },\n    value: obj.collect.join('\\n')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    danger: true,\n    icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this),\n    onClick: () => dispatch(removeColumn({ ...passObj\n    })),\n    size: \"small\",\n    style: {\n      width: 90\n    },\n    children: \"Remove\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    icon: /*#__PURE__*/_jsxDEV(SaveOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this),\n    onClick: () => {\n      dispatch(run());\n    },\n    size: \"small\",\n    style: {\n      width: 90\n    },\n    type: \"primary\",\n    children: \"GO\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\nconst columnsFrontier = (omitColumns, passObj, obj, ref, dispatch) => ({ ...omitColumns,\n  filterDropdown: () => filterDropdown(passObj, obj, ref, dispatch),\n  filterIcon: filtered => /*#__PURE__*/_jsxDEV(AimOutlined, {\n    style: {\n      color: filtered ? '#1890ff' : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 39\n  }, this),\n  onFilterDropdownVisibleChange: visible => {\n    if (visible) {\n      setTimeout(() => {\n        var _ref$current;\n\n        return ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();\n      }, 100);\n    }\n  },\n  render: text => text\n});\n\nexport const transformColumns = (ref, dispatch) => map(pipe(props(['label', 'name', 'label', 'collect']), zipObj(['title', 'dataIndex', 'key', 'collect']), obj => {\n  const omitColumns = omit(['collect'], obj);\n  const passObj = { ...renameKeys({\n      title: 'label',\n      dataIndex: 'name'\n    }, omitColumns)\n  };\n  return columnsFrontier(omitColumns, passObj, obj, ref, dispatch);\n}));","map":{"version":3,"sources":["/home/noname001/react-typescript-data-gen/packages/app/src/features/generator/ColumnFilters.tsx"],"names":["AimOutlined","DeleteOutlined","SaveOutlined","Button","Input","map","omit","pipe","props","zipObj","React","renameKeys","changeColumn","removeColumn","run","TextArea","filterDropdown","passObj","obj","ref","dispatch","padding","e","collect","target","value","split","width","marginBottom","display","join","columnsFrontier","omitColumns","filterIcon","filtered","color","undefined","onFilterDropdownVisibleChange","visible","setTimeout","current","focus","render","text","transformColumns","title","dataIndex"],"mappings":"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","sourcesContent":["import { AimOutlined, DeleteOutlined, SaveOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport { TextAreaRef } from 'antd/lib/input/TextArea';\nimport {\n  map, omit, pipe, props, zipObj,\n} from 'ramda';\nimport React from 'react';\nimport { AppDispatch, ColumnType } from '../../react-app-env';\nimport { renameKeys } from '../../utils/popular';\nimport {\n  changeColumn,\n  removeColumn,\n  run,\n} from './generatorSlice';\n\nconst { TextArea } = Input;\nconst filterDropdown = (\n  passObj: ColumnType<any>, obj: ColumnType<any>, ref: React.Ref<TextAreaRef>, dispatch: AppDispatch,\n): JSX.Element => (\n  <div style={ { padding: 8 } }>\n    <TextArea\n      onChange={ (e) => dispatch(changeColumn({\n        ...passObj,\n        collect: e.target.value.split('\\n',),\n      })) }\n      placeholder={ 'Pass Keywords ' }\n      ref={ ref }\n      rows={ 4 }\n      style={ { width: 188, marginBottom: 8, display: 'block' } }\n      value={ obj.collect.join('\\n',) }\n    />\n    <Button\n      danger\n      icon={ <DeleteOutlined /> }\n      onClick={ () => dispatch(removeColumn({ ...passObj },),) }\n      size=\"small\"\n      style={ { width: 90 } }\n    >\n        Remove\n    </Button>\n\n    <Button\n      icon={ <SaveOutlined /> }\n      onClick={ () => {\n        dispatch(run(),);\n      } }\n      size=\"small\"\n      style={ { width: 90 } }\n      type=\"primary\"\n    >\n        GO\n    </Button>\n  </div>\n);\nconst columnsFrontier = (\n  omitColumns: any, passObj: ColumnType<any>, obj: ColumnType<any>, ref: React.Ref<TextAreaRef>, dispatch: AppDispatch,\n) => ({\n  ...omitColumns,\n  filterDropdown: () => filterDropdown(\n    passObj,\n    obj,\n    ref,\n    dispatch,\n  ),\n  filterIcon: (filtered: boolean,) => <AimOutlined style={ { color: filtered ? '#1890ff' : undefined } } />,\n  onFilterDropdownVisibleChange: (visible: boolean,) => {\n    if (visible) {\n      setTimeout(\n        () => ref?.current?.focus(),\n        100,\n      );\n    }\n  },\n  render: (text: string,) => text,\n});\n\nexport const transformColumns = (\n  ref: React.Ref<TextAreaRef>, dispatch: AppDispatch,\n): any => map(pipe<any, any, any, any>(\n  props([\n    'label',\n    'name',\n    'label',\n    'collect'\n  ]),\n  zipObj([\n    'title',\n    'dataIndex',\n    'key',\n    'collect'\n  ]),\n  (obj: ColumnType<any>) => {\n    const omitColumns = omit(\n      ['collect'],\n      obj,\n    );\n    const passObj = {\n      ...renameKeys(\n        { title: 'label', dataIndex: 'name' },\n        omitColumns,\n      ),\n    };\n    return columnsFrontier(\n      omitColumns,\n      passObj,\n      obj,\n      ref,\n      dispatch,\n    );\n  },\n));\n"]},"metadata":{},"sourceType":"module"}