{"ast":null,"code":"var _jsxFileName = \"/home/noname001/react-typescript-data-gen/packages/app/src/components/WeekDays.tsx\";\nimport { Button, Space } from 'antd';\nimport { lensProp, not, over, pipe, __ } from 'ramda';\nimport React from 'react';\nimport { findAndMerge } from '../utils/popular';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const setDay = (day, days, setDays) => pipe(over(lensProp('active'), not), findAndMerge(days, __, 'abbr'), setDays)(day);\nexport const WeekDays = ({\n  value,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(Space, {\n  children: value.map((day, idx) => /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => setDay(day, value, onChange),\n    shape: \"circle\",\n    type: day.active ? 'dashed' : 'primary',\n    children: day.abbr\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n_c = WeekDays;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekDays\");","map":{"version":3,"sources":["/home/noname001/react-typescript-data-gen/packages/app/src/components/WeekDays.tsx"],"names":["Button","Space","lensProp","not","over","pipe","__","React","findAndMerge","setDay","day","days","setDays","WeekDays","value","onChange","map","idx","active","abbr"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,EAApC,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,kBAA7B;;AACA,OAAO,MAAMC,MAAM,GAAG,CACpBC,GADoB,EACVC,IADU,EACGC,OADH,KAEZP,IAAI,CACZD,IAAI,CACFF,QAAQ,CAAC,QAAD,CADN,EAEFC,GAFE,CADQ,EAKZK,YAAY,CACVG,IADU,EAEVL,EAFU,EAGV,MAHU,CALA,EAUZM,OAVY,CAAJ,CAWRF,GAXQ,CAFH;AAmBP,OAAO,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACtB,QAAC,KAAD;AAAA,YAEID,KAAK,CAACE,GAAN,CAAU,CACRN,GADQ,EACEO,GADF,kBAEL,QAAC,MAAD;AAEH,IAAA,OAAO,EAAG,MAAMR,MAAM,CACpBC,GADoB,EAEpBI,KAFoB,EAGpBC,QAHoB,CAFnB;AAOH,IAAA,KAAK,EAAC,QAPH;AAQH,IAAA,IAAI,EAAGL,GAAG,CAACQ,MAAJ,GAAa,QAAb,GAAwB,SAR5B;AAAA,cAUFR,GAAG,CAACS;AAVF,KACGF,GADH;AAAA;AAAA;AAAA;AAAA,UAFL;AAFJ;AAAA;AAAA;AAAA;AAAA,QADK;KAAMJ,Q","sourcesContent":["import { Button, Space } from 'antd'\nimport { lensProp, not, over, pipe, __ } from 'ramda'\nimport React from 'react'\nimport { AppDispatch, Day } from '../react-app-env'\nimport { findAndMerge } from '../utils/popular'\nexport const setDay = (\n  day: Day, days: Day[], setDays: AppDispatch\n): any => pipe(\n  over<any,any>(\n    lensProp('active'),\n    not\n  ),\n  findAndMerge(\n    days,\n    __,\n    'abbr'\n  ),\n  setDays\n)(day)\n\ntype WeekDays = {\n  value: Day[],\n  onChange: any\n}\nexport const WeekDays = ({ value, onChange }: WeekDays): JSX.Element => (\n  <Space>\n    { \n      value.map((\n        day: Day, idx: number\n      ) => <Button\n        key={ idx }\n        onClick={ () => setDay(\n          day,\n          value,\n          onChange\n        ) }\n        shape=\"circle\"\n        type={ day.active ? 'dashed' : 'primary' }\n      >\n        {day.abbr}\n      </Button>)\n    }\n  </Space>\n)\n"]},"metadata":{},"sourceType":"module"}