{"ast":null,"code":"import { DatePicker, Input, InputNumber, Select } from 'antd';\nimport { always, assoc, chain, compose, cond, converge, curry, equals, includes, indexBy, mergeRight, objOf, path, pick, pipe, pluck, prop, T, __ } from 'ramda';\nimport { WeekDays } from '../components/WeekDays';\nimport { createColumn } from '../features/generator/generatorSlice';\nimport { mergeAndRestruct } from './popular';\nconst daysOfWeek = [{\n  label: 'Sunday',\n  abbr: 'Sun',\n  active: false\n}, {\n  label: 'Monday',\n  abbr: 'Mon',\n  active: true\n}, {\n  label: 'Tuesday',\n  abbr: 'Tue',\n  active: false\n}, {\n  label: 'Wednesday',\n  abbr: 'Wed',\n  active: false\n}, {\n  label: 'Thursday',\n  abbr: 'Thu',\n  active: false\n}, {\n  label: 'Friday',\n  abbr: 'Fri',\n  active: false\n}, {\n  label: 'Saturday',\n  abbr: 'Sat',\n  active: false\n}];\nconst areas = [{\n  label: 'Custom',\n  value: 'custom'\n}, {\n  label: 'Integer',\n  value: 'integer'\n}, {\n  label: 'Dates',\n  value: 'dates'\n}];\nconst {\n  TextArea\n} = Input;\nconst baseColumn = ['name', 'label', 'type', 'collect'];\nexport const unionFields = [{\n  name: 'type',\n  label: 'Type',\n  rules: [{\n    required: true,\n    message: 'Missing type'\n  }],\n  component: 'Select',\n  options: areas,\n  defaultValue: null\n}, {\n  name: 'name',\n  label: 'Name',\n  rules: [{\n    required: true\n  }],\n  component: 'Input',\n  defaultValue: null\n}, {\n  name: 'label',\n  label: 'Label',\n  rules: [{\n    required: true\n  }],\n  component: 'Input',\n  defaultValue: null\n}];\nexport const customFields = [...unionFields, {\n  name: 'collect',\n  label: 'Collect',\n  rules: [{\n    required: true\n  }],\n  component: 'TextArea',\n  defaultValue: null\n}];\nexport const dateFields = [...unionFields, {\n  name: 'days',\n  label: 'Days of week',\n  rules: [{\n    required: true\n  }],\n  component: 'WeekDays',\n  defaultValue: daysOfWeek\n}, {\n  name: 'startDay',\n  label: 'Start Day',\n  rules: [{\n    required: true\n  }],\n  component: 'DatePicker',\n  defaultValue: null\n}, {\n  name: 'limit',\n  label: 'Limit',\n  rules: [{\n    required: true\n  }],\n  component: 'InputNumber',\n  defaultValue: 0\n}];\nexport const integerFields = [...unionFields, {\n  name: 'from',\n  label: 'From',\n  rules: [{\n    required: true\n  }],\n  component: 'InputNumber',\n  defaultValue: 1\n}, {\n  name: 'to',\n  label: 'To',\n  rules: [{\n    required: true\n  }],\n  component: 'InputNumber',\n  defaultValue: 10\n}, {\n  name: 'length',\n  label: 'Length',\n  rules: [{\n    required: true\n  }],\n  component: 'InputNumber',\n  defaultValue: 10\n}];\nexport const components = {\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  TextArea,\n  WeekDays\n};\nexport const selectByType = cond([[equals('custom'), always(customFields)], [equals('integer'), always(integerFields)], [equals('dates'), always(dateFields)], [T, always([])]]);\nexport const onFinish = curry((dispatch, state, values) => pipe(indexBy(prop('name')), pluck('value'), mergeAndRestruct(baseColumn, 'options'), newValues => dispatch(createColumn(newValues)))(state.fields));\nexport const extractValueByComponent = curry((component, event) => cond([[includes(__, ['Input', 'TextArea']), pipe(always(event), path(['target', 'value']))], [equals('DatePicker'), pipe(always(event), e => e.format('DD.MM.YYYY'))], [includes(__, ['InputNumber', 'Select']), compose(always(event))], [equals('WeekDays'), compose(always(event))]])(component)); // (component: any)=> React.createElement(component)\n\nexport const getReactComponentFromCollect = pipe(prop('component'), prop(__, components));\nexport const addValueAndOnChange = dispatch => chain(assoc('onChange'), curry((props, e) => pipe(converge(mergeRight, [pick(['name']), always(pipe(extractValueByComponent(props.component), objOf('value'))(e))]), dispatch)(props)));","map":{"version":3,"sources":["/home/noname001/react-typescript-data-gen/packages/app/src/utils/form.ts"],"names":["DatePicker","Input","InputNumber","Select","always","assoc","chain","compose","cond","converge","curry","equals","includes","indexBy","mergeRight","objOf","path","pick","pipe","pluck","prop","T","__","WeekDays","createColumn","mergeAndRestruct","daysOfWeek","label","abbr","active","areas","value","TextArea","baseColumn","unionFields","name","rules","required","message","component","options","defaultValue","customFields","dateFields","integerFields","components","selectByType","onFinish","dispatch","state","values","newValues","fields","extractValueByComponent","event","e","format","getReactComponentFromCollect","addValueAndOnChange","props"],"mappings":"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","sourcesContent":["import { DatePicker, Input, InputNumber, Select } from 'antd'\nimport { always, assoc, chain, compose, cond, converge, curry, equals, includes, indexBy, mergeRight, objOf, path, pick, pipe, pluck, prop, T, __ } from 'ramda'\nimport { WeekDays } from '../components/WeekDays'\nimport { createColumn } from '../features/generator/generatorSlice'\nimport { AppDispatch, Field } from '../react-app-env'\nimport { mergeAndRestruct } from './popular'\nconst daysOfWeek = [\n  { label: 'Sunday', abbr: 'Sun', active: false },\n  { label: 'Monday', abbr: 'Mon', active: true },\n  { label: 'Tuesday', abbr: 'Tue', active: false },\n  { label: 'Wednesday', abbr: 'Wed', active: false },\n  { label: 'Thursday', abbr: 'Thu', active: false },\n  { label: 'Friday', abbr: 'Fri', active: false },\n  { label: 'Saturday', abbr: 'Sat', active: false }\n]\nconst areas = [\n  { label: 'Custom', value: 'custom' },\n  { label: 'Integer', value: 'integer' },\n  { label: 'Dates', value: 'dates' }\n]\nconst { TextArea } = Input\nconst baseColumn = [\n  'name',\n  'label',\n  'type',\n  'collect'\n]\nexport const unionFields = [\n  {name: 'type', label: 'Type', rules: [{ required: true, message: 'Missing type' }], component: 'Select', options: areas, defaultValue: null},\n  {name: 'name', label: 'Name', rules: [{ required: true }], component: 'Input', defaultValue: null},\n  {name: 'label', label: 'Label', rules: [{ required: true }], component: 'Input', defaultValue: null},\n]\nexport const customFields = [...unionFields, {name: 'collect', label: 'Collect', rules: [{ required: true }], component: 'TextArea', defaultValue: null},]\nexport const dateFields = [\n  ...unionFields,\n  {name: 'days', label: 'Days of week', rules: [{ required: true }], component: 'WeekDays', defaultValue: daysOfWeek },\n  {name: 'startDay', label: 'Start Day', rules: [{ required: true }], component: 'DatePicker', defaultValue: null },\n  {name: 'limit', label: 'Limit', rules: [{ required: true }], component: 'InputNumber', defaultValue: 0 },\n]\nexport const integerFields = [\n  ...unionFields,\n  {name: 'from', label: 'From', rules: [{ required: true }], component: 'InputNumber', defaultValue: 1 },\n  {name: 'to', label: 'To', rules: [{ required: true }], component: 'InputNumber', defaultValue: 10 },\n  {name: 'length', label: 'Length', rules: [{ required: true }], component: 'InputNumber', defaultValue: 10 },\n]\nexport const components = {\n  Input, InputNumber, DatePicker, Select, TextArea, WeekDays\n}\nexport const selectByType = cond<string, any[]>([\n  [equals('custom'), always(customFields)],\n  [equals('integer'), always(integerFields)],\n  [equals('dates'), always(dateFields)],\n  [T, always([])]\n])\n\nexport const onFinish = curry((\n  dispatch: any, state: any, values: any\n) => pipe(\n  indexBy<any>(prop('name')),\n  pluck('value'),\n  mergeAndRestruct(\n    baseColumn,\n    'options'\n  ),\n  (newValues)=> dispatch(createColumn(newValues))\n)(state.fields))\n\nexport const extractValueByComponent = curry((\n  component, event\n) => cond<any, any>([\n  [\n    includes(\n      __,\n      ['Input', 'TextArea']\n    ), pipe(\n      always(event),\n      path(['target', 'value'])\n    )\n  ],\n  [\n    equals('DatePicker'), pipe(\n      always(event),\n      (e)=>e.format('DD.MM.YYYY')\n    )\n  ],\n  [\n    includes(\n      __,\n      ['InputNumber', 'Select']\n    ), compose(always(event))\n  ],\n  [equals('WeekDays'), compose(always(event))]\n])(component))\n// (component: any)=> React.createElement(component)\nexport const getReactComponentFromCollect = pipe<Field, any, JSX.Element>(\n  prop('component'),\n  prop(\n    __,\n    components\n  )\n)\nexport const addValueAndOnChange: any = (dispatch: AppDispatch)=>chain(\n  assoc('onChange'),\n  curry((\n    props: any, e: any\n  )=>pipe<Field, any, any>(\n    converge(\n      mergeRight,\n      [\n        pick(['name']), always(pipe<any, any, any>(\n          extractValueByComponent(props.component),\n          objOf('value')\n        )(e))\n      ]\n    ),\n    dispatch\n  )(props))\n)\n"]},"metadata":{},"sourceType":"module"}